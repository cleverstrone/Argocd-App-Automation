apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: {{ .Values.namespace }}
spec:
  replicas: {{ .Values.backend.replicas }}
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      initContainers:
      - name: wait-for-postgres
        image: busybox:1.36
        command: [ 'sh', '-c', 'until nc -z postgres {{ .Values.postgres.port }}; do echo "Waiting for Postgres..."; sleep 2; done' ]
      containers:
      - name: backend
        image: {{ .Values.backend.image }}
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: {{ .Values.backend.port }}
        env:
        - name: DB_HOST
          value: postgres.{{ .Values.namespace }}.svc.cluster.local
        - name: DB_PORT
          value: "{{ .Values.postgres.port }}"
        - name: DB_NAME
          value: {{ .Values.postgres.db }}
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: backend-secrets
              key: POSTGRES_USER
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: backend-secrets
              key: POSTGRES_PASSWORD
        readinessProbe:
          httpGet:
            path: /health
            port: {{ .Values.backend.port }}
          initialDelaySeconds: 5
          periodSeconds: 5
